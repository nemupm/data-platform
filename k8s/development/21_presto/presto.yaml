# helm template presto stable/presto > presto.yaml
---
# Source: presto/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: presto-coordinator
  labels:
    app: presto
    chart: presto-0.1.1
    release: presto
    heritage: Helm
    component: coordinator
data:
  node.properties: |
    node.environment=production
    node.data-dir=/presto/etc/data

  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError

  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    discovery-server.enabled=true
    discovery.uri=http://presto:8080

  log.properties: |
    com.facebook.presto=INFO

  kafka.catalog.properties: |
    connector.name=kafka
    kafka.nodes=kafka.default.svc.cluster.local:9092
    kafka.table-names=twitter.sampled-stream,tpch.customer
    kafka.hide-internal-columns=false

  docker-presto.sh: |
    #!/bin/bash
    cp /etc/presto/*.catalog.properties $PRESTO_CONF_DIR/catalog
    cp /etc/presto/*.properties $PRESTO_CONF_DIR
    rm $PRESTO_CONF_DIR/*.catalog.properties
    cp /etc/presto/*.config $PRESTO_CONF_DIR
    cp /etc/presto/catalog/
    launcher run
---
# Source: presto/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: presto-worker
  labels:
    app: presto
    chart: presto-0.1.1
    release: presto
    heritage: Helm
    component: worker
data:
  node.properties: |
    node.environment=production
    node.data-dir=/presto/etc/data

  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError

  config.properties: |
    coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    discovery.uri=http://presto:8080

  log.properties: |
    com.facebook.presto=INFO

  kafka.catalog.properties: |
    connector.name=kafka
    kafka.nodes=kafka.default.svc.cluster.local:9092
    kafka.table-names=tpch.twitter_sampled_stream
    kafka.hide-internal-columns=false

  docker-presto.sh: |
    #!/bin/bash
    cp /etc/presto/*.catalog.properties $PRESTO_CONF_DIR/catalog
    cp /etc/presto/*.properties $PRESTO_CONF_DIR
    rm $PRESTO_CONF_DIR/*.catalog.properties
    cp /etc/presto/*.config $PRESTO_CONF_DIR
    launcher run

  health_check.sh: |
    #!/bin/bash 
    curl --silent presto:8080/v1/node | tr "," "\n" | grep --silent $(hostname -i)
---
# Source: presto/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: presto
  labels:
    app: presto
    chart: presto-0.1.1
    release: presto
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http-coord
      protocol: TCP
      name: http-coord
  selector:
    app: presto
    release: presto
    component: coordinator
---
# Source: presto/templates/deployment-coordinator.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: presto-coordinator
  labels:
    app: presto
    chart: presto-0.1.1
    release: presto
    heritage: Helm
    component: coordinator
spec:
  selector:
    matchLabels:
      app: presto
      release: presto
      component: coordinator
  template:
    metadata:
      labels:
        app: presto
        release: presto
        component: coordinator
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: presto-coordinator
      containers:
        - name: presto-coordinator
          image: "bivas/presto:0.196"
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash"]
          args:
            - /etc/presto/docker-presto.sh
          volumeMounts:
            - mountPath: /etc/presto
              name: config-volume
          ports:
            - name: http-coord
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/cluster
              port: http-coord
          readinessProbe:
            httpGet:
              path: /v1/cluster
              port: http-coord
          resources:
            {}
---
# Source: presto/templates/deployment-worker.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: presto-worker
  labels:
    app: presto
    chart: presto-0.1.1
    release: presto
    heritage: Helm
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: presto
      release: presto
      component: worker
  template:
    metadata:
      labels:
        app: presto
        release: presto
        component: worker
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: presto-worker
      containers:
        - name: presto-worker
          image: "bivas/presto:0.196"
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash"]
          args:
            - /etc/presto/docker-presto.sh
          volumeMounts:
            - mountPath: /etc/presto
              name: config-volume
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - /etc/presto/health_check.sh
            initialDelaySeconds: 10
            periodSeconds: 25
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - /etc/presto/health_check.sh
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
